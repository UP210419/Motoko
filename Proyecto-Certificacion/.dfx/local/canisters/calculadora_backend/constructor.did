service : {
  abs: (float64) -> (float64);
  acosDegrees: (float64) -> (opt float64);
  add: (float64, float64) -> (float64);
  asinDegrees: (float64) -> (opt float64);
  atanDegrees: (float64) -> (float64);
  atmospheresToPascals: (float64) -> (float64);
  binaryToDecimal: (nat) -> (nat);
  calculateFactorial: (nat) -> (nat);
  caloriesToJoules: (float64) -> (float64);
  cateto: (float64, float64) -> (float64);
  celsiusToFahrenheit: (float64) -> (float64);
  celsiusToKelvin: (float64) -> (float64);
  combinations: (nat, nat) -> (nat);
  convertDegreToRadians: (float64) -> (float64);
  convertRadianToRDegres: (float64) -> (float64);
  cosDegrees: (float64) -> (float64);
  daysToHours: (float64) -> (float64);
  decimalToBinary: (nat) -> (nat);
  decimalToOctal: (nat) -> (nat);
  divide: (float64, float64) -> (opt float64);
  exp: (float64) -> (float64);
  fahrenheitToCelsius: (float64) -> (float64);
  fahrenheitToKelvin: (float64) -> (float64);
  feetToMeters: (float64) -> (float64);
  gallonsToLiters: (float64) -> (float64);
  hoursToDays: (float64) -> (float64);
  hoursToMinutes: (float64) -> (float64);
  hypot: (float64, float64) -> (float64);
  joulesToCalories: (float64) -> (float64);
  kelvinToCelsius: (float64) -> (float64);
  kilogramsToPounds: (float64) -> (float64);
  kmphToMph: (float64) -> (float64);
  litersToGallons: (float64) -> (float64);
  ln: (float64) -> (opt float64);
  log: (float64) -> (opt float64);
  logBase: (float64, float64) -> (opt float64);
  metersToFeet: (float64) -> (float64);
  minutesToHours: (float64) -> (float64);
  minutesToSeconds: (float64) -> (float64);
  mphToKmph: (float64) -> (float64);
  multiply: (float64, float64) -> (float64);
  nthRoot: (float64, float64) -> (opt float64);
  octalToDecimal: (nat) -> (nat);
  partialFactorial: (nat, nat) -> (nat);
  pascalsToAtmospheres: (float64) -> (float64);
  percentage: (float64, float64) -> (float64);
  permutations: (nat, nat) -> (nat);
  poundsToKilograms: (float64) -> (float64);
  power: (float64, float64) -> (float64);
  quadraticFormula: (float64, float64, float64) ->
   (opt record {
          float64;
          float64;
        });
  secondsToMinutes: (float64) -> (float64);
  sinDegrees: (float64) -> (float64);
  sqrt: (float64) -> (opt float64);
  squareFeetToSquareMeters: (float64) -> (float64);
  squareMetersToSquareFeet: (float64) -> (float64);
  subtract: (float64, float64) -> (float64);
  tanDegrees: (float64) -> (float64);
}
